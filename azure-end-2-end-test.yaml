pool:
  vmImage: ubuntu-latest

name: INFO-SERVICE-TEST

variables:
  trivyVersion: 0.9.2

steps:
  - task: Npm@1
    displayName: 'npm install'
    inputs:
      verbose: true
    retryCountOnTaskFailure: 2

  - task: DockerInstaller@0
    displayName: 'Install Docker 17.09.0-ce'
  

  - bash: |
      echo 'running docker build'
      docker build --no-cache --tag bpinfoservice:CA2_TEST_V1 $(Build.SourcesDirectory)
      echo 'running docker image'
      docker run --name bpinfoservice-test -p 22137:22137 -d bpinfoservice:CA2_TEST_V1
    displayName: 'Build and run docker image'
    continueOnError: true
  
  - script: |
      sudo apt-get install rpm
      wget https://github.com/aquasecurity/trivy/releases/download/v$(trivyVersion)/trivy_$(trivyVersion)_Linux-64bit.deb
      sudo dpkg -i trivy_$(trivyVersion)_Linux-64bit.deb
      trivy -v
    displayName: 'Download and install Trivy'
  
  # - bash: |
  #     curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin v0.18.3
  #     trivy -v
  #     ls -lrt
  #     trivy image --format template --template "@templates/junit.tpl" -o trivy-vunrability-report.xml bpinfoservice:CA2_TEST_V1
  #   displayName: 'run trivy scan'

  - bash: |
      # Write your commands here
      echo "Running Cypress Test"
      ./node_modules/cypress/bin/cypress run --reporter junit --reporter-options "mochaFile=./cypress/results/TEST-bpinfoservice-Result.xml,toConsole=true"
      echo "Printing Report and workingDir in  $(System.DefaultWorkingDirectory)"
      cat ./cypress/results/TEST-bpinfoservice-Result.xml
    displayName: 'Cypress Test'
    continueOnError: true

  - bash: |
      docker stop bpinfoservice-test || true && docker rm bpinfoservice-test || true
    displayName: 'kill running docker copy'
    continueOnError: true
    condition: always()

  - task: PublishTestResults@2
    displayName: 'Publish Test Results ead-ca2-bp-info-service.xml'
    inputs:
      testResultsFiles: '**/TEST-*.xml'
      failTaskOnFailedTests: true
      testRunTitle: 'BP-INFO-SERVICE-E2E-TEST'
  
  - task: PublishTestResults@2
    inputs:
      testResultsFormat: 'JUnit'
      testResultsFiles: '**/trivy-vunrability-report*.xml'
      mergeTestResults: true
      failTaskOnFailedTests: false
      testRunTitle: 'Trivy - Low and Medium Vulnerabilities'